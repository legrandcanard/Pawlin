// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pawlin.Data;

#nullable disable

namespace Pawlin.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251022134640_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("Pawlin.Common.Entities.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Decks", (string)null);
                });

            modelBuilder.Entity("Pawlin.Common.Entities.DeckInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeckId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.HasIndex("UserId");

                    b.ToTable("DeckInstances", (string)null);
                });

            modelBuilder.Entity("Pawlin.Common.Entities.Flashcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DeckId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.ToTable("Flashcards", (string)null);
                });

            modelBuilder.Entity("Pawlin.Common.Entities.ReviewDataItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeckInstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("EasinessFactor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(2.5);

                    b.Property<int>("FlashcardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvervalDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("NextReviewDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int>("Repeats")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ReviewDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeckInstanceId");

                    b.HasIndex("FlashcardId");

                    b.HasIndex("UserId");

                    b.HasIndex("DeckInstanceId", "NextReviewDateUtc");

                    b.ToTable("ReviewDataItems", (string)null);
                });

            modelBuilder.Entity("Pawlin.Common.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Pawlin.Common.Entities.Deck", b =>
                {
                    b.HasOne("Pawlin.Common.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pawlin.Common.Entities.DeckInstance", b =>
                {
                    b.HasOne("Pawlin.Common.Entities.Deck", "Deck")
                        .WithMany()
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawlin.Common.Entities.User", "User")
                        .WithMany("DeckInstances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deck");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pawlin.Common.Entities.Flashcard", b =>
                {
                    b.HasOne("Pawlin.Common.Entities.Deck", null)
                        .WithMany("Flashcards")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pawlin.Common.Entities.ReviewDataItem", b =>
                {
                    b.HasOne("Pawlin.Common.Entities.DeckInstance", "DeckInstance")
                        .WithMany("ReviewHistory")
                        .HasForeignKey("DeckInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawlin.Common.Entities.Flashcard", "Flashcard")
                        .WithMany()
                        .HasForeignKey("FlashcardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawlin.Common.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeckInstance");

                    b.Navigation("Flashcard");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pawlin.Common.Entities.Deck", b =>
                {
                    b.Navigation("Flashcards");
                });

            modelBuilder.Entity("Pawlin.Common.Entities.DeckInstance", b =>
                {
                    b.Navigation("ReviewHistory");
                });

            modelBuilder.Entity("Pawlin.Common.Entities.User", b =>
                {
                    b.Navigation("DeckInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
